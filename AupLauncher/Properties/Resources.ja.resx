<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="AupFile" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>AupFile.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DefaultProfileDisplayName" xml:space="preserve">
    <value>既定のプロファイル</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>AviUtl と Audacity のプロジェクトファイルを認識し適切なアプリケーションを起動します。</value>
  </data>
  <data name="EK_Audacity" xml:space="preserve">
    <value>Audacity を起動する</value>
  </data>
  <data name="EK_AviUtl" xml:space="preserve">
    <value>AviUtl を起動する</value>
  </data>
  <data name="EK_InvalidValue" xml:space="preserve">
    <value>無効な値です(利用しないでください)</value>
  </data>
  <data name="EK_Nothing" xml:space="preserve">
    <value>何もしない</value>
  </data>
  <data name="EK_RunCustomProgram" xml:space="preserve">
    <value>カスタムプログラムを起動する</value>
  </data>
  <data name="EK_ShowError" xml:space="preserve">
    <value>エラーを表示する</value>
  </data>
  <data name="EK_ShowSettings" xml:space="preserve">
    <value>設定画面を表示する</value>
  </data>
  <data name="ER_Line1" xml:space="preserve">
    <value>■{0}のエラーレポート</value>
  </data>
  <data name="ER_Line2" xml:space="preserve">
    <value>※このログファイルには個人情報が含まれている可能性があります。</value>
  </data>
  <data name="ER_Line3" xml:space="preserve">
    <value>※エラーが解決しない場合は開発者(Takym)に提出してください。不具合改善に利用します。</value>
  </data>
  <data name="ER_Line4" xml:space="preserve">
    <value>バージョン：{0}、コード名：{1}</value>
  </data>
  <data name="ER_Line5" xml:space="preserve">
    <value>発生時刻  ：{0:yyyy'年'MM'月'dd'日('dddd')' tthh'時('HH'時)'mm'分'ss.fff'秒'}</value>
  </data>
  <data name="ER_Line6" xml:space="preserve">
    <value>プロセスID：{0}</value>
  </data>
  <data name="ER_Line7" xml:space="preserve">
    <value>このファイルの保存場所：{0}</value>
  </data>
  <data name="ER_Line8_Data" xml:space="preserve">
    <value>データ      ：</value>
  </data>
  <data name="ER_Line8_HelpLink" xml:space="preserve">
    <value>ヘルプリンク：{0}</value>
  </data>
  <data name="ER_Line8_HResult" xml:space="preserve">
    <value>H-RESULT    ：0x{0:X08} ({0})</value>
  </data>
  <data name="ER_Line8_Message" xml:space="preserve">
    <value>メッセージ  ：{0}</value>
  </data>
  <data name="ER_Line8_Source" xml:space="preserve">
    <value>発生源      ：{0}</value>
  </data>
  <data name="ER_Line8_SourceFunc" xml:space="preserve">
    <value>発生源の関数：{0} in {1}</value>
  </data>
  <data name="ER_Line8_StackTrace" xml:space="preserve">
    <value>呼び出し履歴：</value>
  </data>
  <data name="ER_Line8_Title" xml:space="preserve">
    <value>□例外の情報 ({0})</value>
  </data>
  <data name="Message_ConfirmClosing" xml:space="preserve">
    <value>設定が変更されています。保存しますか？
[はい]を押すと変更を保存し終了します。
[いいえ]を押すと変更を破棄し終了します。
[キャンセル]を押すと終了しません。</value>
  </data>
  <data name="Message_ConfirmUninstalling" xml:space="preserve">
    <value>拡張子の登録情報をアンインストールし、終了します。続行する場合は [はい] を停止する場合は [いいえ] を押してください。</value>
  </data>
  <data name="Message_ErrorReport" xml:space="preserve">
    <value>予期せぬエラーが発生しました。{0}詳細は「{1}」をご覧ください。</value>
  </data>
  <data name="Message_FileNotFound" xml:space="preserve">
    <value>指定されたファイル「{0}」は存在しません。</value>
  </data>
  <data name="Message_InvalidExecutionKind" xml:space="preserve">
    <value>無効な起動方法が検出されました。設定を変更してください。</value>
  </data>
  <data name="Message_InvalidType" xml:space="preserve">
    <value>指定されたファイル「{0}」は有効なプロジェクトファイルではありません。</value>
  </data>
  <data name="NewProfileDisplayName" xml:space="preserve">
    <value>新しいプロファイル</value>
  </data>
  <data name="ShellDescription" xml:space="preserve">
    <value>AviUtl/Audacity プロジェクトファイル</value>
  </data>
  <data name="ShellMenu_Open" xml:space="preserve">
    <value>AupLauncher で開く(&amp;O)</value>
  </data>
  <data name="UI_aud_path_filter" xml:space="preserve">
    <value>Audacity 実行可能プログラム</value>
  </data>
  <data name="UI_avi_path_filter" xml:space="preserve">
    <value>AviUtl 実行可能プログラム</value>
  </data>
  <data name="UI_cus_path_filter" xml:space="preserve">
    <value>全ての実行可能プログラム</value>
  </data>
  <data name="V_Line1" xml:space="preserve">
    <value>題名　　　　：{0}</value>
  </data>
  <data name="V_Line2" xml:space="preserve">
    <value>開発者　　　：{0}</value>
  </data>
  <data name="V_Line3" xml:space="preserve">
    <value>著作権表記　：{0}</value>
  </data>
  <data name="V_Line4" xml:space="preserve">
    <value>バージョン　：{0}</value>
  </data>
  <data name="V_Line5" xml:space="preserve">
    <value>開発コード名：{0}</value>
  </data>
  <data name="V_Line6" xml:space="preserve">
    <value>ビルド構成　：{0}</value>
  </data>
  <data name="V_Line7" xml:space="preserve">
    <value>短い説明　　：{0}</value>
  </data>
  <data name="V_Line8" xml:space="preserve">
    <value>長い説明　　：{0}</value>
  </data>
</root>