<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="AupFile" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>AupFile.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DefaultProfileDisplayName" xml:space="preserve">
    <value>Default Profile</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>This tool recognizes a project file of AviUtl and Audacity to start a proper application for editing.</value>
  </data>
  <data name="EK_Audacity" xml:space="preserve">
    <value>Run Audacity</value>
  </data>
  <data name="EK_AviUtl" xml:space="preserve">
    <value>Run AviUtl</value>
  </data>
  <data name="EK_InvalidValue" xml:space="preserve">
    <value>This is an invalid value. (Do not use!)</value>
  </data>
  <data name="EK_Nothing" xml:space="preserve">
    <value>Do nothing</value>
  </data>
  <data name="EK_RunCustomProgram" xml:space="preserve">
    <value>Run a custom program</value>
  </data>
  <data name="EK_ShowError" xml:space="preserve">
    <value>Show an error dialog</value>
  </data>
  <data name="ER_Line1" xml:space="preserve">
    <value># {0} Error Report</value>
  </data>
  <data name="ER_Line2" xml:space="preserve">
    <value> * This log file may include your privacy information.</value>
  </data>
  <data name="ER_Line3" xml:space="preserve">
    <value> * When the problem cannot be fixed, please submit this file to the developer (Takym). (Only used to repair and improve.)</value>
  </data>
  <data name="ER_Line4" xml:space="preserve">
    <value>Version: {0}, Code Name: {1}</value>
  </data>
  <data name="ER_Line5" xml:space="preserve">
    <value>Time Occurred: {0:dddd, MMMM dd, yyyy  HH:mm:ss.fff (tthh)}</value>
  </data>
  <data name="ER_Line6" xml:space="preserve">
    <value>Process ID: {0}</value>
  </data>
  <data name="ER_Line7" xml:space="preserve">
    <value>Location to this file: {0}</value>
  </data>
  <data name="ER_Line8_Data" xml:space="preserve">
    <value>Data.............:</value>
  </data>
  <data name="ER_Line8_HelpLink" xml:space="preserve">
    <value>Help Link........: {0}</value>
  </data>
  <data name="ER_Line8_HResult" xml:space="preserve">
    <value>H-Result.........: 0x{0:X08} ({0})</value>
  </data>
  <data name="ER_Line8_Message" xml:space="preserve">
    <value>Message..........: {0}</value>
  </data>
  <data name="ER_Line8_Source" xml:space="preserve">
    <value>Source...........: {0}</value>
  </data>
  <data name="ER_Line8_SourceFunc" xml:space="preserve">
    <value>Source (Function): {0} in {1}</value>
  </data>
  <data name="ER_Line8_StackTrace" xml:space="preserve">
    <value>Call Stack.......:</value>
  </data>
  <data name="ER_Line8_Title" xml:space="preserve">
    <value>## Exception Information ({0})</value>
  </data>
  <data name="Message_ConfirmClosing" xml:space="preserve">
    <value>Settings are changed. Do you want to save?
If you click [Yes] button, save changes and close.
If you click [No] button, discard changes and close.
If you click [Cancel] button, will not close the form.</value>
  </data>
  <data name="Message_ConfirmUninstalling" xml:space="preserve">
    <value>The registry of the extension will be uninstalled and the application will terminate. Please push [Yes] to continue, otherwise [No].</value>
  </data>
  <data name="Message_ErrorReport" xml:space="preserve">
    <value>The unexpected error occurred. {0} Please refer "{1}" for more details.</value>
  </data>
  <data name="Message_FileNotFound" xml:space="preserve">
    <value>The specified file "{0}" does not exist.</value>
  </data>
  <data name="Message_InvalidExecutionKind" xml:space="preserve">
    <value>Detected an invalid execution method. Please fix the settings.</value>
  </data>
  <data name="Message_InvalidType" xml:space="preserve">
    <value>The specified file "{0}" is not a valid project file.</value>
  </data>
  <data name="NewProfileDisplayName" xml:space="preserve">
    <value>New Profile</value>
  </data>
  <data name="ShellDescription" xml:space="preserve">
    <value>AviUtl/Audacity Project File</value>
  </data>
  <data name="ShellMenu_Open" xml:space="preserve">
    <value>&amp;Open with AupLauncher</value>
  </data>
  <data name="UI_aud_path_filter" xml:space="preserve">
    <value>The Audacity Executable Program</value>
  </data>
  <data name="UI_avi_path_filter" xml:space="preserve">
    <value>The AviUtl Executable Program</value>
  </data>
  <data name="UI_cus_path_filter" xml:space="preserve">
    <value>All  Executable Programs</value>
  </data>
  <data name="V_Line1" xml:space="preserve">
    <value>Title......: {0}</value>
  </data>
  <data name="V_Line2" xml:space="preserve">
    <value>Developer..: {0}</value>
  </data>
  <data name="V_Line3" xml:space="preserve">
    <value>Copyright..: {0}</value>
  </data>
  <data name="V_Line4" xml:space="preserve">
    <value>Version....: {0}</value>
  </data>
  <data name="V_Line5" xml:space="preserve">
    <value>Code Name..: {0}</value>
  </data>
  <data name="V_Line6" xml:space="preserve">
    <value>Built for..: {0}</value>
  </data>
  <data name="V_Line7" xml:space="preserve">
    <value>Description: {0}</value>
  </data>
  <data name="V_Line8" xml:space="preserve">
    <value>Description: {0}</value>
  </data>
</root>